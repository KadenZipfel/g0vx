{"version":3,"sources":["images/upvote.svg","images/downvote.svg","utils/getWeb3.js","components/Message.js","components/Nav.js","components/Index/Hero.js","components/Footer.js","pages/Index.js","components/Gov/ProposalForm.js","components/Gov/Time.js","components/Gov/Proposal.js","components/Spinner.js","pages/Gov.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","this","Message","props","message","react_default","createElement","className","target","rel","href","txHash","concat","Component","Nav","address","button","account","components_Message","tokenName","Hero","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAddressChange","e","setState","tokenAddress","value","handleTimeLimitChange","timeLimit","handleSubmit","_ref","preventDefault","utils","isAddress","state","abrupt","error","factory","methods","createProtocol","send","from","err","transactionHash","setMessage","on","number","receipt","setTimeout","clearMessage","getLastId","res","link","protocolLink","_x","apply","arguments","onSubmit","name","placeholder","type","onChange","numProtocols","Footer","Index","componentDidMount","_callee2","accounts","networkId","deployedNetwork","instance","_context2","sent","eth","getAccounts","net","getId","GovernanceFactory","networks","Contract","abi","runExample","alert","accountInterval","setInterval","getNumProtocols","newMessage","components_Nav","Index_Hero","assign","components_Footer","ProposalForm","handleProposalFormClick","form","document","querySelector","toggleProposalForm","proposalName","proposalDescription","handleProposalNameChange","bind","assertThisInitialized","handleProposalDescriptionChange","handleProposalSubmit","createProposal","asciiToHex","title","description","protocol","submitProposal","_this2","getProposals","noProposals","onClick","required","maxLength","Time","timeLeft","days","hours","minutes","seconds","Proposal","handleVoteFor","handleVoteAgainst","handleResult","getResult","submitVote","id","_this3","_this4","result","resulted","src","upvote","alt","downvote","hexToAscii","Gov_Time","Spinner","Gov","match","params","govId","getProtocolAddress","getTimeLimit","toggleButtons","getTokenName","_callee3","_context3","getProtocol","then","protocolAddress","Governance","toString","_callee4","xhr","_context4","token","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","_callee5","proposalsLength","proposalArr","i","proposal","proposalObj","time","_context5","getProposalsLength","proposals","startTime","voteWeightFor","voteWeightAgainst","parseInt","Math","floor","Date","now","ended","formatTime","push","loading","forEach","Array","querySelectorAll","classList","add","resultButton","remove","_callee6","_context6","handleOpenCheck","_callee7","_context7","openCheck","handleClosedCheck","_callee8","_context8","closedCheck","contains","length","clearInterval","date","getUTCDate","getUTCHours","getUTCMinutes","getSeconds","spinner","components_Spinner","Gov_Proposal","key","checked","Gov_ProposalForm","reverse","App","react_router_dom","basename","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"m/qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qltDCqCzBC,EAnCC,kBACd,IAAIC,QAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxBC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAgC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAE1Bf,OAAOgB,SAFmB,CAAAH,EAAAE,KAAA,gBAGtBP,EAAO,IAAIS,IAAKjB,OAAOgB,UAHDH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMpBf,OAAOgB,SAASE,SANI,OAQ1BpB,EAAQU,GARkBK,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAU1Bd,EAAMc,EAAAM,IAVoB,QAAAN,EAAAE,KAAA,iBAcrBf,OAAOQ,MAERA,EAAOR,OAAOQ,KACpBY,QAAQC,IAAI,2BACZvB,EAAQU,KAIFE,EAAW,IAAIO,IAAKK,UAAUC,aAClC,yBAEIf,EAAO,IAAIS,IAAKP,GACtBU,QAAQC,IAAI,gDACZvB,EAAQU,IA3BoB,yBAAAK,EAAAW,SAAAjB,EAAAkB,KAAA,gBCiBrBC,2LAjBX,OAAGD,KAAKE,MAAMC,QAEVC,EAAAxB,EAAAyB,cAAA,KACEC,UAAU,UACVC,OAAO,SACPC,IAAI,sBACJC,KAAMT,KAAKE,MAAMQ,OAAX,kCAAAC,OAAsDX,KAAKE,MAAMQ,QAAW,MAEjFV,KAAKE,MAAMC,SAIT,YAdSS,qBCiCPC,MA9Bf,SAAaX,GACX,IAAIY,EACAC,EAeJ,OAbGb,EAAMc,UACPF,EAAUZ,EAAMc,SAIhBD,EADCb,EAAMC,QACEC,EAAAxB,EAAAyB,cAACY,EAAYf,GAGpBE,EAAAxB,EAAAyB,cAAA,UAAQC,UAAWQ,EAAO,eAAoB,eAC3CA,GAAoB,uBAKzBV,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,OACbF,EAAAxB,EAAAyB,cAAA,KAAGI,KAAK,IAAIH,UAAU,cAAtB,QAGAF,EAAAxB,EAAAyB,cAAA,MAAIC,UAAU,cACXJ,EAAMgB,WAERH,IC6EQI,sBAtGb,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAAuB,KAAAmB,IACjBC,EAAA3C,OAAA6C,EAAA,EAAA7C,CAAAuB,KAAAvB,OAAA8C,EAAA,EAAA9C,CAAA0C,GAAAK,KAAAxB,KAAME,KASRuB,oBAAsB,SAACC,GACrBN,EAAKO,SAAS,CAACC,aAAcF,EAAEnB,OAAOsB,SAXrBT,EAcnBU,sBAAwB,SAACJ,GACvBN,EAAKO,SAAS,CAACI,UAAWL,EAAEnB,OAAOsB,SAflBT,EAkBnBY,aAlBmB,eAAAC,EAAAxD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAkBJ,SAAAC,EAAO4C,GAAP,OAAA/C,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACboC,EAAEQ,iBAEEd,EAAKlB,MAAMnB,KAAKoD,MAAMC,UAAUhB,EAAKiB,MAAMT,cAHlC,CAAAxC,EAAAE,KAAA,eAAAF,EAAAkD,OAAA,SAIJlB,EAAKO,SAAS,CAACY,MAAO,2BAJlB,OAMXnB,EAAKO,SAAS,CAACY,MAAO,OANX,cAAAnD,EAAAE,KAAA,EASP8B,EAAKlB,MAAMsC,QAAQC,QAAQC,eAC/BtB,EAAKiB,MAAMN,UACXX,EAAKiB,MAAMT,cACXe,KAAK,CAACC,KAAMxB,EAAKlB,MAAMc,SAAU,SAAC6B,EAAKC,GACvC1B,EAAKlB,MAAM6C,WAAW,yBAA0BD,KAC/CE,GAAG,eAAgB,SAACC,EAAQC,GACf,IAAXD,IACD7B,EAAKlB,MAAM6C,WAAW,yBAA0BG,EAAQJ,iBACxDK,WAAW,WACT/B,EAAKlB,MAAMkD,gBACV,QAEJJ,GAAG,QAAS,SAACT,EAAOW,GACrB9B,EAAKlB,MAAM6C,WAAW,sBAAuBG,EAAUA,EAAQJ,gBAAkB,QAtBtE,OAyBb1B,EAAKlB,MAAMsC,QAAQC,QAAQY,YAAY7B,KAAK,SAACqB,EAAKS,GAChD,GAAGT,EACDlD,QAAQC,IAAIiD,OACP,CACL,IAAMU,EAAI,QAAA5C,OAAW2C,GACrBlC,EAAKO,SAAS,CAAC6B,aAAcD,OA9BpB,wBAAAnE,EAAAW,SAAAjB,EAAAkB,SAlBI,gBAAAyD,GAAA,OAAAxB,EAAAyB,MAAA1D,KAAA2D,YAAA,GAEjBvC,EAAKiB,MAAQ,CACXT,aAAc,GACdG,UAAW,GACXyB,aAAc,KACdjB,MAAO,MANQnB,wEAsDjB,OAAGpB,KAAKqC,MAAMmB,aAEVpD,EAAAxB,EAAAyB,cAAA,WAASC,UAAU,QACjBF,EAAAxB,EAAAyB,cAAA,KAAGI,KAAMT,KAAKqC,MAAMmB,aAAclD,UAAU,cAA5C,mBAKFF,EAAAxB,EAAAyB,cAAA,WAASC,UAAU,QACjBF,EAAAxB,EAAAyB,cAAA,MAAIC,UAAU,gBAAd,gCAGAF,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,eACVN,KAAKqC,MAAME,OAEdnC,EAAAxB,EAAAyB,cAAA,QACEuD,SAAU5D,KAAKgC,aACf1B,UAAU,cAEVF,EAAAxB,EAAAyB,cAAA,SACEwD,KAAK,UACLC,YAAY,gBACZC,KAAK,OACLzD,UAAU,cACV0D,SAAUhE,KAAKyB,oBACfI,MAAO7B,KAAKqC,MAAMT,eAEpBxB,EAAAxB,EAAAyB,cAAA,SACEwD,KAAK,YACLC,YAAY,gCACZC,KAAK,SACLzD,UAAU,cACV0D,SAAUhE,KAAK8B,sBACfD,MAAO7B,KAAKqC,MAAMN,YAEpB3B,EAAAxB,EAAAyB,cAAA,UAAQC,UAAU,gBAAlB,sBAIFF,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,cACVN,KAAKE,MAAM+D,aADd,oDA9FSrD,qBCgBJsD,MAjBf,WACE,OACE9D,EAAAxB,EAAAyB,cAAA,UAAQC,UAAU,UAChBF,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,gBAAb,uBACwBF,EAAAxB,EAAAyB,cAAA,KACpBC,UAAU,eACVG,KAAK,iCACLF,OAAO,SACPC,IAAI,uBAJgB,mBC8Ff2D,qBA1Fb,SAAAA,EAAYjE,GAAO,IAAAkB,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAAuB,KAAAmE,IACjB/C,EAAA3C,OAAA6C,EAAA,EAAA7C,CAAAuB,KAAAvB,OAAA8C,EAAA,EAAA9C,CAAA0F,GAAA3C,KAAAxB,KAAME,KAWRkE,kBAZmB3F,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAYC,SAAAwF,IAAA,IAAAtF,EAAAuF,EAAAC,EAAAC,EAAAC,EAAA,OAAA9F,EAAAC,EAAAO,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAArF,KAAA,EAAAqF,EAAApF,KAAA,EAGGnB,IAHH,cAGVY,EAHU2F,EAAAC,KAAAD,EAAApF,KAAA,EAMOP,EAAK6F,IAAIC,cANhB,cAMVP,EANUI,EAAAC,KAAAD,EAAApF,KAAA,EASQP,EAAK6F,IAAIE,IAAIC,QATrB,OASVR,EATUG,EAAAC,KAUVH,EAAkBQ,EAAkBC,SAASV,GAC7CE,EAAW,IAAI1F,EAAK6F,IAAIM,SAC5BF,EAAkBG,IAClBX,GAAmBA,EAAgB1D,SAKrCM,EAAKO,SAAS,CAAE5C,OAAMuF,WAAU9B,QAASiC,GAAYrD,EAAKgE,YAlB1CV,EAAApF,KAAA,iBAAAoF,EAAArF,KAAA,GAAAqF,EAAAhF,GAAAgF,EAAA,SAqBhBW,MAAK,0EAGL1F,QAAQ4C,MAARmC,EAAAhF,IAxBgB,QA2BlB0B,EAAKkE,gBAAkBC,YAAW9G,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAwF,EAAA,OAAA3F,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACV8B,EAAKiB,MAAMtD,KAAK6F,IAAIC,cADV,QAC3BP,EAD2BlF,EAAAuF,MAEpB,KAAOvD,EAAKiB,MAAMrB,UAC7BI,EAAKO,SAAS,CACZX,QAASsD,EAAS,KAEpB3E,QAAQC,IAAIwB,EAAKiB,MAAMrB,UANQ,wBAAA5B,EAAAW,SAAAjB,EAAAkB,SAQhC,KAEHoB,EAAKoE,kBArCa,yBAAAd,EAAA3E,SAAAsE,EAAArE,KAAA,aAZDoB,EAoDnB2B,WAAa,SAAC0C,EAAY/E,GACxBU,EAAKO,SAAS,CACZxB,QAASsF,EACT/E,WAEFf,QAAQC,IAAIwB,EAAKiB,MAAMlC,SACvBR,QAAQC,IAAIwB,EAAKiB,MAAM3B,SA1DNU,EA6DnBgC,aAAe,WACbhC,EAAKO,SAAS,CACZxB,QAAS,KACTO,OAAQ,QAhEOU,EAoEnBoE,gBAAkB,WAChBpE,EAAKiB,MAAMG,QAAQC,QAAQsC,QAAQvD,KAAK,SAACqB,EAAKS,GAC5ClC,EAAKO,SAAS,CAACsC,aAAcX,OApE/BlC,EAAKiB,MAAQ,CACXtD,KAAM,KACNiC,QAAS,KACTwB,QAAS,KACTrC,QAAS,GACTO,OAAQ,GACRuD,aAAc,MARC7C,wEA2EjB,OACEhB,EAAAxB,EAAAyB,cAAA,WACED,EAAAxB,EAAAyB,cAACqF,EAAQ1F,KAAKqC,OACdjC,EAAAxB,EAAAyB,cAACsF,EAADlH,OAAAmH,OAAA,GACM5F,KAAKqC,MADX,CAEEU,WAAY/C,KAAK+C,WACjBK,aAAcpD,KAAKoD,gBAErBhD,EAAAxB,EAAAyB,cAACwF,EAAD,MACAzF,EAAAxB,EAAAyB,cAACY,EAAD,cArFYL,8BC6FLkF,sBAnGb,SAAAA,EAAY5F,GAAO,IAAAkB,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAAuB,KAAA8F,IACjB1E,EAAA3C,OAAA6C,EAAA,EAAA7C,CAAAuB,KAAAvB,OAAA8C,EAAA,EAAA9C,CAAAqH,GAAAtE,KAAAxB,KAAME,KAoDR6F,wBAA0B,SAACrE,GACzB,IAAMsE,EAAOC,SAASC,cAAc,kBACjCxE,EAAEnB,SAAWyF,GACd5E,EAAKlB,MAAMiG,sBAtDb/E,EAAKiB,MAAQ,CACX+D,aAAc,GACdC,oBAAqB,IAGvBjF,EAAKkF,yBAA2BlF,EAAKkF,yBAAyBC,KAA9B9H,OAAA+H,EAAA,EAAA/H,QAAA+H,EAAA,EAAA/H,CAAA2C,KAChCA,EAAKqF,gCAAkCrF,EAAKqF,gCAAgCF,KAArC9H,OAAA+H,EAAA,EAAA/H,QAAA+H,EAAA,EAAA/H,CAAA2C,KACvCA,EAAKsF,qBAAuBtF,EAAKsF,qBAAqBH,KAA1B9H,OAAA+H,EAAA,EAAA/H,QAAA+H,EAAA,EAAA/H,CAAA2C,KAC5BA,EAAKuF,eAAiBvF,EAAKuF,eAAeJ,KAApB9H,OAAA+H,EAAA,EAAA/H,QAAA+H,EAAA,EAAA/H,CAAA2C,KAVLA,wFAaMM,GACvB1B,KAAK2B,SAAS,CAACyE,aAAc1E,EAAEnB,OAAOsB,gEAGRH,GAC9B1B,KAAK2B,SAAS,CAAC0E,oBAAqB3E,EAAEnB,OAAOsB,qDAG1BH,GACnBA,EAAEQ,iBAEFlC,KAAKE,MAAMiG,qBAEXnG,KAAK2G,eAEH3G,KAAKE,MAAMnB,KAAKoD,MAAMyE,WAAW5G,KAAKqC,MAAM+D,cAC5CpG,KAAKE,MAAMnB,KAAKoD,MAAMyE,WAAW5G,KAAKqC,MAAMgE,sBAE9CrG,KAAK2B,SAAS,CAACyE,aAAc,GAAIC,oBAAqB,oFAGnCQ,EAAOC,8FACpB9G,KAAKE,MAAM6G,SAAStE,QAAQuE,eAAeH,EAAOC,GACrDnE,KAAK,CAACC,KAAM5C,KAAKE,MAAMc,SAAU,SAAC6B,EAAKC,GACtCmE,EAAK/G,MAAM6C,WAAW,yBAA0BD,KAC/CE,GAAG,eAAgB,SAACC,EAAQC,GACf,IAAXD,IACDgE,EAAK/G,MAAM6C,WAAW,yBAA0BG,EAAQJ,iBACxDmE,EAAK/G,MAAMgH,eACX/D,WAAW,WACT8D,EAAK/G,MAAMkD,gBACV,QAEJJ,GAAG,QAAS,SAACT,EAAOW,GACrB+D,EAAK/G,MAAM6C,WAAW,sBAAuBG,EAAUA,EAAQJ,gBAAkB,eAGrF9C,KAAKE,MAAMiH,oJAWX,OACE/G,EAAAxB,EAAAyB,cAAA,OACEC,UAAU,uBACV8G,QAASpH,KAAK+F,yBAEd3F,EAAAxB,EAAAyB,cAAA,QACEC,UAAU,sBACVsD,SAAU5D,KAAK0G,sBAEftG,EAAAxB,EAAAyB,cAAA,MAAIC,UAAU,yBAAd,qBAGAF,EAAAxB,EAAAyB,cAAA,SACE0D,KAAK,OACLD,YAAY,QACZjC,MAAO7B,KAAKqC,MAAM+D,aAClBpC,SAAUhE,KAAKsG,yBACfhG,UAAU,uBACV+G,UAAQ,EACRC,UAAU,QAEZlH,EAAAxB,EAAAyB,cAAA,YACE0D,KAAK,OACLD,YAAY,+BACZjC,MAAO7B,KAAKqC,MAAMgE,oBAClBrC,SAAUhE,KAAKyG,gCACfnG,UAAU,0BACVgH,UAAU,QAEZlH,EAAAxB,EAAAyB,cAAA,UAAQC,UAAU,yBAAlB,mBA3FiBM,cCwBZ2G,MA1Bf,SAAcrH,GACZ,IAAIsH,EAGJ,GAAGtH,EAAMsH,SAAU,CACjB,GAAGtH,EAAMsH,SAASC,KAAO,EAEvB,OADAD,EAAQ,GAAA7G,OAAMT,EAAMsH,SAASC,KAArB,SACDrH,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,kBAAkBkH,GAExC,GAAGtH,EAAMsH,SAASE,MAAQ,EAExB,OADAF,EAAQ,GAAA7G,OAAMT,EAAMsH,SAASE,MAArB,UACDtH,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,kBAAkBkH,GAExC,GAAGtH,EAAMsH,SAASG,QAAU,EAE1B,OADAH,EAAQ,GAAA7G,OAAMT,EAAMsH,SAASG,QAArB,YACDvH,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,kBAAkBkH,GAExC,GAAGtH,EAAMsH,SAASI,QAAU,EAE1B,OADAJ,EAAQ,GAAA7G,OAAMT,EAAMsH,SAASI,QAArB,YACDxH,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,kBAAkBkH,GAI1C,OAAO,mDCwFMK,cAxGb,SAAAA,EAAY3H,GAAO,IAAAkB,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAAuB,KAAA6H,IACjBzG,EAAA3C,OAAA6C,EAAA,EAAA7C,CAAAuB,KAAAvB,OAAA8C,EAAA,EAAA9C,CAAAoJ,GAAArG,KAAAxB,KAAME,KAED4H,cAAgB1G,EAAK0G,cAAcvB,KAAnB9H,OAAA+H,EAAA,EAAA/H,QAAA+H,EAAA,EAAA/H,CAAA2C,KACrBA,EAAK2G,kBAAoB3G,EAAK2G,kBAAkBxB,KAAvB9H,OAAA+H,EAAA,EAAA/H,QAAA+H,EAAA,EAAA/H,CAAA2C,KACzBA,EAAK4G,aAAe5G,EAAK4G,aAAazB,KAAlB9H,OAAA+H,EAAA,EAAA/H,QAAA+H,EAAA,EAAA/H,CAAA2C,KACpBA,EAAK6G,YANY7G,+EASH,IAAA6F,EAAAjH,KACdA,KAAKE,MAAM6G,SAAStE,QAAQyF,WAAWlI,KAAKE,MAAMiI,IAAI,GACnDxF,KAAK,CAACC,KAAM5C,KAAKE,MAAMc,SAAU,SAAC6B,EAAKC,GACtCmE,EAAK/G,MAAM6C,WAAW,yBAA0BD,KAC/CE,GAAG,eAAgB,SAACC,EAAQC,GACf,IAAXD,IACDgE,EAAK/G,MAAM6C,WAAW,yBAA0BG,EAAQJ,iBACxDK,WAAW,WACT8D,EAAK/G,MAAMkD,gBACV,KACH6D,EAAK/G,MAAMgH,kBAEZlE,GAAG,QAAS,SAACH,EAAKK,GACnB+D,EAAK/G,MAAM6C,WAAW,sBAAuBG,EAAUA,EAAQJ,gBAAkB,oDAInE,IAAAsF,EAAApI,KAClBA,KAAKE,MAAM6G,SAAStE,QAAQyF,WAAWlI,KAAKE,MAAMiI,IAAI,GACnDxF,KAAK,CAACC,KAAM5C,KAAKE,MAAMc,SAAU,SAAC6B,EAAKC,GACtCsF,EAAKlI,MAAM6C,WAAW,yBAA0BD,KAC/CE,GAAG,eAAgB,SAACC,EAAQC,GACf,IAAXD,IACDmF,EAAKlI,MAAM6C,WAAW,yBAA0BG,EAAQJ,iBACxDK,WAAW,WACTiF,EAAKlI,MAAMkD,gBACV,KACHgF,EAAKlI,MAAMgH,kBAEZlE,GAAG,QAAS,SAACH,EAAKK,GACnBkF,EAAKlI,MAAM6C,WAAW,sBAAuBG,EAAUA,EAAQJ,gBAAkB,+CAIxE,IAAAuF,EAAArI,KACbA,KAAKE,MAAM6G,SAAStE,QAAQ6F,OAAOtI,KAAKE,MAAMiI,IAC3CxF,KAAK,CAACC,KAAM5C,KAAKE,MAAMc,SAAU,SAAC6B,EAAKC,GACtCuF,EAAKnI,MAAM6C,WAAW,yBAA0BD,KAC/CE,GAAG,eAAgB,SAACC,EAAQC,GACf,IAAXD,IACDoF,EAAKnI,MAAM6C,WAAW,yBAA0BG,EAAQJ,iBACxDK,WAAW,WACTkF,EAAKnI,MAAMkD,gBACV,KACHiF,EAAKnI,MAAMgH,kBAEZlE,GAAG,QAAS,SAACH,EAAKK,GACnBmF,EAAKnI,MAAM6C,WAAW,sBAAuBG,EAAUA,EAAQJ,gBAAkB,4CAKlF9C,KAAKE,MAAMqI,WACZ5I,QAAQC,IAAI,YACZD,QAAQC,IAAI,WAAYI,KAAKE,MAAMoI,SACb,IAAtBtI,KAAKE,MAAMoI,OAAkBtI,KAAKsI,OAAS,SAAWtI,KAAKsI,OAAS,2CAKtE,OACElI,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,YACbF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,qBACbF,EAAAxB,EAAAyB,cAAA,OACEmI,IAAKC,IACLC,IAAI,SACJpI,UAAW,4DAA8DN,KAAKE,MAAMiI,GACpFf,QAASpH,KAAK8H,gBAEhB1H,EAAAxB,EAAAyB,cAAA,OACEmI,IAAKG,IACLD,IAAI,WACJpI,UAAW,gEAAkEN,KAAKE,MAAMiI,GACxFf,QAASpH,KAAK+H,qBAGlB3H,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,kBACbF,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,kBAAkBN,KAAKE,MAAMnB,KAAKoD,MAAMyG,WAAW5I,KAAKE,MAAM2G,QAC3EzG,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,yBAAyBN,KAAKE,MAAMnB,KAAKoD,MAAMyG,WAAW5I,KAAKE,MAAM4G,eAEpF1G,EAAAxB,EAAAyB,cAAA,KACE+G,QAASpH,KAAKgI,aACd1H,UAAW,6CAA+CN,KAAKE,MAAMiI,IAFvE,gBAMA/H,EAAAxB,EAAAyB,cAACwI,EAAD,CAAMrB,SAAUxH,KAAKE,MAAMsH,WAC3BpH,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,qBACVN,KAAKsI,gBAlGO1H,oBCERkI,MANf,WACE,OACE1I,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,aC6WJyI,sBAnWb,SAAAA,EAAY7I,GAAO,IAAAkB,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAAuB,KAAA+I,IACjB3H,EAAA3C,OAAA6C,EAAA,EAAA7C,CAAAuB,KAAAvB,OAAA8C,EAAA,EAAA9C,CAAAsK,GAAAvH,KAAAxB,KAAME,KAqBRkE,kBAtBmB3F,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAsBC,SAAAwF,IAAA,IAAAtF,EAAAuF,EAAAC,EAAAC,EAAAhC,EAAA2F,EAAA,OAAAxJ,EAAAC,EAAAO,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAArF,KAAA,EAAAqF,EAAApF,KAAA,EAGGnB,IAHH,cAGVY,EAHU2F,EAAAC,KAAAD,EAAApF,KAAA,EAMOP,EAAK6F,IAAIC,cANhB,cAMVP,EANUI,EAAAC,KAAAD,EAAApF,KAAA,EASQP,EAAK6F,IAAIE,IAAIC,QATrB,OASVR,EATUG,EAAAC,KAUVH,EAAkBQ,EAAkBC,SAASV,GAC7C/B,EAAU,IAAIzD,EAAK6F,IAAIM,SAC3BF,EAAkBG,IAClBX,GAAmBA,EAAgB1D,SAG/BqH,EAAK/G,EAAKlB,MAAM8I,MAAMC,OAAOC,MAInC9H,EAAKO,SAAS,CAAE5C,OAAMuF,WAAU9B,QAASA,EAAS0G,MAAOf,GAAM/G,EAAKgE,YApBpDV,EAAApF,KAAA,iBAAAoF,EAAArF,KAAA,GAAAqF,EAAAhF,GAAAgF,EAAA,SAuBhBW,MAAK,0EAGL1F,QAAQ4C,MAARmC,EAAAhF,IA1BgB,eA6BlB0B,EAAKkE,gBAAkBC,YAAW9G,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAwF,EAAA,OAAA3F,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACV8B,EAAKiB,MAAMtD,KAAK6F,IAAIC,cADV,QAC3BP,EAD2BlF,EAAAuF,MAEpB,KAAOvD,EAAKiB,MAAMrB,SAC7BI,EAAKO,SAAS,CACZX,QAASsD,EAAS,KAJW,wBAAAlF,EAAAW,SAAAjB,EAAAkB,SAOhC,KApCe0E,EAAApF,KAAA,GAsCZ8B,EAAK+H,qBAtCO,eAAAzE,EAAApF,KAAA,GAuCZ8B,EAAKgI,eAvCO,eAAA1E,EAAApF,KAAA,GAwCZ8B,EAAK8F,eAxCO,QAyClB9F,EAAKiI,gBACLjI,EAAKkI,eACLlI,EAAK+F,cA3Ca,yBAAAzC,EAAA3E,SAAAsE,EAAArE,KAAA,aAtBDoB,EAwEnB+H,mBAxEmB1K,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAwEE,SAAA0K,IAAA,IAAAxC,EAAA,OAAApI,EAAAC,EAAAO,KAAA,SAAAqK,GAAA,cAAAA,EAAAnK,KAAAmK,EAAAlK,MAAA,cAAAkK,EAAAlK,KAAA,EACZ8B,EAAKiB,MAAMG,QAAQC,QAAQgH,YAChCrI,EAAKiB,MAAM6G,OACX1H,OAAOkI,KAAK,SAACpG,GACblC,EAAKO,SAAS,CAACgI,gBAAiBrG,MAJf,OAObyD,EAAW,IAAI3F,EAAKiB,MAAMtD,KAAK6F,IAAIM,SACvC0E,EAAWzE,IAAK/D,EAAKiB,MAAMsH,iBAE7BvI,EAAKO,SAAS,CAACoF,aAE8B,+CAA1C3F,EAAKiB,MAAMsH,gBAAgBE,YAC5BzI,EAAKO,SAAS,CAACY,OAAO,IAbL,wBAAAiH,EAAAzJ,SAAAwJ,EAAAvJ,SAxEFoB,EAyFnBkI,aAzFmB7K,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAyFJ,SAAAiL,IAAA,IAAAlI,EAAAmI,EAAA,OAAApL,EAAAC,EAAAO,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cAAA0K,EAAA1K,KAAA,EACc8B,EAAKiB,MAAM0E,SAAStE,QAAQwH,QAAQzI,OADlD,OACPI,EADOoI,EAAArF,MAGPoF,EAAM,IAAIG,gBAGZC,KAAK,MAAT,sFAAAxJ,OAAsGiB,EAAtG,qBAAsI,GACtImI,EAAIpH,OAEJoH,EAAIK,mBAAqB,SAAC1I,GACxB,GAAsB,IAAnBqI,EAAIM,YAAmC,MAAfN,EAAIO,OAAgB,CAC7C,IACMpJ,EADWqJ,KAAKC,MAAMT,EAAIU,cACLnC,OAAO,GAAGpH,UACrCE,EAAKO,SAAS,CAACsI,MAAO/I,MAbb,wBAAA8I,EAAAjK,SAAA+J,EAAA9J,SAzFIoB,EA2GnB2B,WAAa,SAAC0C,EAAY/E,GACxBU,EAAKO,SAAS,CACZxB,QAASsF,EACT/E,WAEFf,QAAQC,IAAIwB,EAAKiB,MAAMlC,SACvBR,QAAQC,IAAIwB,EAAKiB,MAAM3B,SAjHNU,EAoHnBgC,aAAe,WACbhC,EAAKO,SAAS,CACZxB,QAAS,KACTO,OAAQ,QAvHOU,EA2HnB8F,aA3HmBzI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA2HJ,SAAA6L,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArM,EAAAC,EAAAO,KAAA,SAAA8L,GAAA,cAAAA,EAAA5L,KAAA4L,EAAA3L,MAAA,cAAA2L,EAAA3L,KAAA,EACP8B,EAAK+H,qBADE,cAAA8B,EAAA3L,KAAA,EAEiB8B,EAAKiB,MAAM0E,SAAStE,QAAQyI,qBAAqB1J,OAFlE,aAEPmJ,EAFOM,EAAAtG,MAGQ,GAHR,CAAAsG,EAAA3L,KAAA,SAIPsL,EAAc,GACVC,EAAI,EALD,YAKIA,EAAIF,GALR,CAAAM,EAAA3L,KAAA,gBAAA2L,EAAA3L,KAAA,GAMc8B,EAAKiB,MAAM0E,SAAStE,QAAQ0I,UAAUN,GAAGrJ,OANvD,QAMHsJ,EANGG,EAAAtG,KAOHoG,EAAc,CAClB5C,GAAI2C,EAAS3C,GACbtB,MAAOiE,EAASjE,MAChBC,YAAagE,EAAShE,YACtBsE,UAAWN,EAASM,UACpBC,cAAeP,EAASO,cACxBC,kBAAmBR,EAASQ,kBAC5BhD,OAAQwC,EAASxC,OACjBC,SAAUuC,EAASvC,UAErB5I,QAAQC,IAAImL,GACRQ,SAASR,EAAYK,WAAaG,SAASnK,EAAKiB,MAAMN,YAAeyJ,KAAKC,MAAMC,KAAKC,MAAQ,MAC/FZ,EAAYa,OAAQ,EACpBb,EAAYvD,SAAW,IAEvBuD,EAAYa,OAAQ,EAEdZ,EAAQO,SAASR,EAAYK,WAAaG,SAASnK,EAAKiB,MAAMN,WAAayJ,KAAKC,MAAMC,KAAKC,MAAQ,KACzGZ,EAAYvD,SAAWpG,EAAKyK,WAAWb,IAEzCJ,EAAYkB,KAAKf,GA3BR,QAKyBF,IALzBI,EAAA3L,KAAA,gBA6BX8B,EAAKO,SAAS,CAACwJ,UAAWP,IAC1BxJ,EAAKO,SAAS,CAACoK,SAAS,IA9Bbd,EAAA3L,KAAA,iBAgCX8B,EAAKO,SAAS,CAACoK,SAAS,IAhCb,yBAAAd,EAAAlL,SAAA2K,EAAA1K,SA3HIoB,EA6KnBiI,cAAgB,WACdjI,EAAKiB,MAAM8I,UAAUa,QAAQ,SAAAlB,GAC3B,GAAGA,EAASc,QACcK,MAAMrJ,KAAKqD,SAASiG,iBAAT,sBAAAvL,OAAgDmK,EAAS3C,MAC5E6D,QAAQ,SAACjL,GACvBA,EAAOoL,UAAUC,IAAI,WAGE,IAAtBtB,EAASvC,UAAoB,CAC9B,IAAM8D,EAAepG,SAASC,cAAT,sBAAAvF,OAA6CmK,EAAS3C,KACxEkE,GACDA,EAAaF,UAAUG,OAAO,cAxLrBlL,EA+LnBgI,aA/LmB3K,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA+LJ,SAAA0N,IAAA,IAAAxK,EAAA,OAAApD,EAAAC,EAAAO,KAAA,SAAAqN,GAAA,cAAAA,EAAAnN,KAAAmN,EAAAlN,MAAA,cAAAkN,EAAAlN,KAAA,EACW8B,EAAKiB,MAAM0E,SAAStE,QAAQV,YAAYP,OADnD,OACPO,EADOyK,EAAA7H,KAEbvD,EAAKO,SAAS,CAACI,cAFF,wBAAAyK,EAAAzM,SAAAwM,EAAAvM,SA/LIoB,EAoMnBqL,gBApMmBhO,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAoMD,SAAA6N,IAAA,OAAA/N,EAAAC,EAAAO,KAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAArN,MAAA,WACY,IAAzB8B,EAAKiB,MAAMuK,UADE,CAAAD,EAAArN,KAAA,eAAAqN,EAAArN,KAAA,EAER8B,EAAKO,SAAS,CAACiL,WAAW,IAFlB,OAAAD,EAAArN,KAAA,sBAAAqN,EAAArN,KAAA,EAKR8B,EAAKO,SAAS,CAACiL,WAAW,IALlB,OAQhBxL,EAAKiI,gBARW,wBAAAsD,EAAA5M,SAAA2M,EAAA1M,SApMCoB,EA+MnByL,kBA/MmBpO,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA+MC,SAAAiO,IAAA,OAAAnO,EAAAC,EAAAO,KAAA,SAAA4N,GAAA,cAAAA,EAAA1N,KAAA0N,EAAAzN,MAAA,WACY,IAA3B8B,EAAKiB,MAAM2K,YADI,CAAAD,EAAAzN,KAAA,eAAAyN,EAAAzN,KAAA,EAEV8B,EAAKO,SAAS,CAACqL,aAAa,IAFlB,OAAAD,EAAAzN,KAAA,sBAAAyN,EAAAzN,KAAA,EAKV8B,EAAKO,SAAS,CAACqL,aAAa,IALlB,OAQlB5L,EAAKiI,gBARa,wBAAA0D,EAAAhN,SAAA+M,EAAA9M,SA/MDoB,EA0NnB+E,mBAAqB,WACnB,IAAMH,EAAOC,SAASC,cAAc,kBACjCF,EAAKmG,UAAUc,SAAS,UACzBjH,EAAKmG,UAAUG,OAAO,UAEtBtG,EAAKmG,UAAUC,IAAI,WA/NJhL,EAmOnB+F,YAAc,WACuB,IAAhC/F,EAAKiB,MAAM8I,UAAU+B,QACtB9L,EAAKO,SAAS,CAACwF,YAAa,4DAnO9B/F,EAAKiB,MAAQ,CACX6G,MAAO,KACPnK,KAAM,KACNiC,QAAS,KACTwB,QAAS,KACTrC,QAAS,KACTwJ,gBAAiB,KACjB5C,SAAU,KACVkD,MAAO,KACP2C,WAAW,EACXI,aAAa,EACbjL,UAAW,KACXoJ,UAAW,GACX5I,OAAO,EACP7B,OAAQ,GACRyG,YAAa,GACb4E,SAAS,GAlBM3K,sFAqEjB+L,cAAcnN,KAAKsF,oDA0FV0F,GACT,IAAMoC,EAAO,IAAI1B,KAAY,IAAPV,GAKtB,MAAO,CACLvD,KALW2F,EAAKC,aAAe,EAM/B3F,MALY0F,EAAKE,cAMjB3F,QALcyF,EAAKG,gBAMnB3F,QALcwF,EAAKI,+CAqEd,IAEHC,EAFGxG,EAAAjH,KACHmL,EAAY,GAoDhB,OAhDEsC,GADwB,IAAvBzN,KAAKqC,MAAM0J,QACF3L,EAAAxB,EAAAyB,cAACqN,EAAD,MAEA,KAGZ1N,KAAKqC,MAAM8I,UAAUa,QAAQ,SAAAlB,IACC,IAAzB7D,EAAK5E,MAAMuK,YACa,IAAtB9B,EAASvC,UACV4C,EAAUW,KACR1L,EAAAxB,EAAAyB,cAACsN,EAADlP,OAAAmH,OAAA,GACMqB,EAAK5E,MADX,CAEE8F,GAAI2C,EAAS3C,GACbtB,MAAOiE,EAASjE,MAChBC,YAAagE,EAAShE,YACtB8G,IAAK9C,EAAS3C,GACdkD,cAAeP,EAASO,cACxBC,kBAAmBR,EAASQ,kBAC5B9D,SAAUsD,EAAStD,SACnBoE,MAAOd,EAASc,MAChB7I,WAAYkE,EAAKlE,WACjBK,aAAc6D,EAAK7D,kBAKG,IAA3B6D,EAAK5E,MAAM2K,cACa,IAAtBlC,EAASvC,UACV4C,EAAUW,KACR1L,EAAAxB,EAAAyB,cAACsN,EAADlP,OAAAmH,OAAA,GACMqB,EAAK5E,MADX,CAEE8F,GAAI2C,EAAS3C,GACbtB,MAAOiE,EAASjE,MAChBC,YAAagE,EAAShE,YACtB8G,IAAK9C,EAAS3C,GACdkD,cAAeP,EAASO,cACxBC,kBAAmBR,EAASQ,kBAC5B9D,SAAUsD,EAAStD,SACnBoE,MAAOd,EAASc,MAChBrD,SAAUuC,EAASvC,SACnBD,OAAQwC,EAASxC,OACjBvF,WAAYkE,EAAKlE,WACjBK,aAAc6D,EAAK7D,mBAO1BpD,KAAKqC,MAAME,MAEVnC,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,OACbF,EAAAxB,EAAAyB,cAACqF,EAADjH,OAAAmH,OAAA,GAAS5F,KAAKqC,MAAd,CAAqBnB,UAAWlB,KAAKqC,MAAM4H,SAC3C7J,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,cAAb,6BAKFF,EAAAxB,EAAAyB,cAAA,WACED,EAAAxB,EAAAyB,cAACqF,EAADjH,OAAAmH,OAAA,GAAS5F,KAAKqC,MAAd,CAAqBnB,UAAWlB,KAAKqC,MAAM4H,SAC3C7J,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,OACbF,EAAAxB,EAAAyB,cAAA,MAAIC,UAAU,eAAd,aAGAF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,cACbF,EAAAxB,EAAAyB,cAAA,UACEC,UAAU,uBACV8G,QAASpH,KAAKmG,oBAFhB,qBAMA/F,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,mBACbF,EAAAxB,EAAAyB,cAAA,SAAOC,UAAU,cAAjB,OAEEF,EAAAxB,EAAAyB,cAAA,SACE0D,KAAK,WACLzD,UAAU,gBACVuD,KAAK,OACLG,SAAUhE,KAAKyM,gBACfoB,QAAS7N,KAAKqC,MAAMuK,YAEtBxM,EAAAxB,EAAAyB,cAAA,QAAMC,UAAU,oBAElBF,EAAAxB,EAAAyB,cAAA,SAAOC,UAAU,cAAjB,SAEEF,EAAAxB,EAAAyB,cAAA,SACE0D,KAAK,WACLzD,UAAU,gBACVuD,KAAK,SACLG,SAAUhE,KAAK6M,kBACfgB,QAAS7N,KAAKqC,MAAM2K,cAEtB5M,EAAAxB,EAAAyB,cAAA,QAAMC,UAAU,sBAItBF,EAAAxB,EAAAyB,cAACyN,EAADrP,OAAAmH,OAAA,GACM5F,KAAKqC,MADX,CAEE6E,aAAclH,KAAKkH,aACnBnE,WAAY/C,KAAK+C,WACjBK,aAAcpD,KAAKoD,aACnB+C,mBAAoBnG,KAAKmG,mBACzBgB,YAAanH,KAAKmH,eAEnBnH,KAAKqC,MAAM8E,YACZ/G,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,kBACZmN,EACAtC,EAAU4C,YAGf3N,EAAAxB,EAAAyB,cAACwF,EAAD,MACAzF,EAAAxB,EAAAyB,cAACY,EAAD,cA7VQL,cCSHoN,mLAXX,OACE5N,EAAAxB,EAAAyB,cAAA,WACED,EAAAxB,EAAAyB,cAAC4N,EAAA,EAAD,CAAQC,SAAS,SACf9N,EAAAxB,EAAAyB,cAAC8N,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnK,IACjC/D,EAAAxB,EAAAyB,cAAC8N,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAWvF,aAN7BnI,aCCE2N,QACW,cAA7BhQ,OAAOiQ,SAASC,UAEe,UAA7BlQ,OAAOiQ,SAASC,UAEhBlQ,OAAOiQ,SAASC,SAASzF,MACvB,2DCZN0F,IAASC,OAAOvO,EAAAxB,EAAAyB,cAACuO,EAAD,MAAS3I,SAAS4I,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtF,KAAK,SAAAuF,GACjCA,EAAaC","file":"static/js/main.46b96c2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/upvote.3c5597e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/downvote.b79c4f6a.svg\";","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, {Component} from 'react';\r\nimport '../layout/components/message.sass';\r\n\r\nclass Message extends Component {\r\n  render() {\r\n    if(this.props.message) {\r\n      return(\r\n        <a \r\n          className=\"message\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href={this.props.txHash ? `http://ropsten.etherscan.io/tx/${this.props.txHash}` : null}\r\n        >\r\n          {this.props.message}\r\n        </a>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport Message from './Message';\r\n\r\nimport '../layout/components/nav.sass';\r\n\r\nfunction Nav(props) {\r\n  let address;\r\n  let button;\r\n\r\n  if(props.account) {\r\n    address = props.account\r\n  }\r\n\r\n  if(props.message) {\r\n    button = <Message {...props} />\r\n  } else {\r\n    button = \r\n      <button className={address ? `nav__address` : 'nav__button'}>\r\n        {address ? address : 'Connect to a Wallet'}\r\n      </button>\r\n  }\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <a href='/' className=\"nav__brand\">\r\n        G0VX\r\n      </a>\r\n      <h2 className=\"nav__token\">\r\n        {props.tokenName}\r\n      </h2>\r\n      {button}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav;","import React, {Component} from 'react';\r\n\r\nimport '../../layout/components/hero.sass';\r\n\r\n// This isn't really a hero lol\r\nclass Hero extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tokenAddress: '',\r\n      timeLimit: '',\r\n      protocolLink: null,\r\n      error: null\r\n    }\r\n  }\r\n\r\n  handleAddressChange = (e) => {\r\n    this.setState({tokenAddress: e.target.value})\r\n  }\r\n\r\n  handleTimeLimitChange = (e) => {\r\n    this.setState({timeLimit: e.target.value})\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!this.props.web3.utils.isAddress(this.state.tokenAddress)) {\r\n      return this.setState({error: 'Invalid token address'});\r\n    } else {\r\n      this.setState({error: null});\r\n    }\r\n\r\n    await this.props.factory.methods.createProtocol(\r\n      this.state.timeLimit, \r\n      this.state.tokenAddress\r\n    ).send({from: this.props.account}, (err, transactionHash) => {\r\n      this.props.setMessage('Transaction Pending...', transactionHash);\r\n    }).on('confirmation', (number, receipt) => {\r\n      if(number === 0) {\r\n        this.props.setMessage('Transaction Confirmed!', receipt.transactionHash);\r\n        setTimeout(() => {\r\n          this.props.clearMessage();\r\n        }, 5000);\r\n      }\r\n    }).on('error', (error, receipt) => {\r\n      this.props.setMessage('Transaction Failed.', receipt ? receipt.transactionHash : null);\r\n    });\r\n\r\n    this.props.factory.methods.getLastId().call((err, res) => {\r\n      if(err) {\r\n        console.log(err);\r\n      } else {\r\n        const link = `/gov/${res}`;\r\n        this.setState({protocolLink: link});\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.protocolLink) {\r\n      return (\r\n        <section className=\"hero\">\r\n          <a href={this.state.protocolLink} className=\"hero__link\">Go to Protocol</a>\r\n        </section>\r\n      );\r\n    } else {\r\n      return (\r\n        <section className=\"hero\">\r\n          <h1 className=\"hero__header\">\r\n            Create a Governance Protocol\r\n          </h1>\r\n          <p className=\"hero__error\">\r\n            {this.state.error}\r\n          </p>\r\n          <form \r\n            onSubmit={this.handleSubmit}\r\n            className=\"hero__form\"\r\n          >\r\n            <input\r\n              name=\"address\"\r\n              placeholder=\"Token address\"\r\n              type=\"text\"\r\n              className=\"hero__input\"\r\n              onChange={this.handleAddressChange}\r\n              value={this.state.tokenAddress}\r\n            />\r\n            <input \r\n              name=\"timeLimit\"\r\n              placeholder=\"Proposal time limit (seconds)\"\r\n              type=\"number\"\r\n              className=\"hero__input\"\r\n              onChange={this.handleTimeLimitChange}\r\n              value={this.state.timeLimit}\r\n            />\r\n            <button className=\"hero__button\">\r\n              Create Governance\r\n            </button>\r\n          </form>\r\n          <p className=\"hero__flex\">\r\n            {this.props.numProtocols} governance protocols deployed with g0vx\r\n          </p>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nimport '../layout/components/footer.sass';\r\n\r\nfunction Footer() {\r\n  return(\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">\r\n        Made with &hearts; by <a \r\n          className=\"footer__link\" \r\n          href=\"https://github.com/KadenZipfel\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n           Kaden Zipfel\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport GovernanceFactory from \"../contracts/GovernanceFactory.json\";\r\nimport getWeb3 from \"../utils/getWeb3\";\r\n\r\nimport Nav from '../components/Nav';\r\nimport Hero from '../components/Index/Hero';\r\nimport Message from '../components/Message';\r\nimport Footer from '../components/Footer';\r\n\r\nimport '../layout/config/_base.sass';\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      web3: null,\r\n      account: null,\r\n      factory: null,\r\n      message: '',\r\n      txHash: '',\r\n      numProtocols: null\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = GovernanceFactory.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        GovernanceFactory.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      this.setState({ web3, accounts, factory: instance }, this.runExample)\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n\r\n    this.accountInterval = setInterval(async () => {\r\n      const accounts = await this.state.web3.eth.getAccounts();\r\n      if (accounts[0] !== this.state.account) {\r\n        this.setState({\r\n          account: accounts[0]\r\n        });\r\n        console.log(this.state.account);\r\n      }\r\n    }, 1000);\r\n\r\n    this.getNumProtocols();\r\n  }\r\n\r\n  setMessage = (newMessage, txHash) => {\r\n    this.setState({\r\n      message: newMessage,\r\n      txHash\r\n    });\r\n    console.log(this.state.message);\r\n    console.log(this.state.txHash);\r\n  }\r\n\r\n  clearMessage = () => {\r\n    this.setState({\r\n      message: null,\r\n      txHash: null\r\n    });\r\n  }\r\n\r\n  getNumProtocols = () => {\r\n    this.state.factory.methods.getId().call((err, res) => {\r\n      this.setState({numProtocols: res});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav {...this.state} />\r\n        <Hero \r\n          {...this.state}\r\n          setMessage={this.setMessage}\r\n          clearMessage={this.clearMessage}\r\n        />\r\n        <Footer />\r\n        <Message />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import React, {Component} from 'react';\r\n\r\nimport '../../layout/components/proposalform.sass';\r\n\r\nclass ProposalForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      proposalName: '',\r\n      proposalDescription: ''\r\n    }\r\n\r\n    this.handleProposalNameChange = this.handleProposalNameChange.bind(this);\r\n    this.handleProposalDescriptionChange = this.handleProposalDescriptionChange.bind(this);\r\n    this.handleProposalSubmit = this.handleProposalSubmit.bind(this);\r\n    this.createProposal = this.createProposal.bind(this);\r\n  }\r\n\r\n  handleProposalNameChange(e) {\r\n    this.setState({proposalName: e.target.value});\r\n  }\r\n\r\n  handleProposalDescriptionChange(e) {\r\n    this.setState({proposalDescription: e.target.value});\r\n  }\r\n\r\n  handleProposalSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.toggleProposalForm();\r\n\r\n    this.createProposal(\r\n      // This part is working\r\n      this.props.web3.utils.asciiToHex(this.state.proposalName),\r\n      this.props.web3.utils.asciiToHex(this.state.proposalDescription)\r\n    );\r\n    this.setState({proposalName: '', proposalDescription: ''});\r\n  }\r\n\r\n  async createProposal(title, description) {\r\n    await this.props.protocol.methods.submitProposal(title, description)\r\n      .send({from: this.props.account}, (err, transactionHash) => {\r\n        this.props.setMessage('Transaction Pending...', transactionHash);\r\n      }).on('confirmation', (number, receipt) => {\r\n        if(number === 0) {\r\n          this.props.setMessage('Transaction Confirmed!', receipt.transactionHash);\r\n          this.props.getProposals();\r\n          setTimeout(() => {\r\n            this.props.clearMessage();\r\n          }, 5000);\r\n        }\r\n      }).on('error', (error, receipt) => {\r\n        this.props.setMessage('Transaction Failed.', receipt ? receipt.transactionHash : null);\r\n      });\r\n\r\n    this.props.noProposals();\r\n  }\r\n\r\n  handleProposalFormClick = (e) => {\r\n    const form = document.querySelector('.proposal-form');\r\n    if(e.target === form) {\r\n      this.props.toggleProposalForm();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div \r\n        className=\"hidden proposal-form\"\r\n        onClick={this.handleProposalFormClick}\r\n      >\r\n        <form \r\n          className=\"proposal-form__form\"\r\n          onSubmit={this.handleProposalSubmit}\r\n        >\r\n          <h4 className=\"proposal-form__header\">\r\n            Submit a Proposal\r\n          </h4>\r\n          <input \r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={this.state.proposalName}\r\n            onChange={this.handleProposalNameChange}\r\n            className=\"proposal-form__input\"\r\n            required\r\n            maxLength=\"140\"\r\n          />\r\n          <textarea \r\n            type=\"text\"\r\n            placeholder=\"Description (max. 255 chars)\"\r\n            value={this.state.proposalDescription}\r\n            onChange={this.handleProposalDescriptionChange} \r\n            className=\"proposal-form__textarea\"\r\n            maxLength=\"255\"\r\n          ></textarea>\r\n          <button className=\"proposal-form__button\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProposalForm;","import React from 'react';\r\n\r\nfunction Time(props) {\r\n  let timeLeft;\r\n\r\n  // Render only the largest unit\r\n  if(props.timeLeft) {\r\n    if(props.timeLeft.days > 0) {\r\n      timeLeft = `${props.timeLeft.days} Days`;\r\n      return <p className=\"proposal__time\">{timeLeft}</p>;\r\n    }\r\n    if(props.timeLeft.hours > 0) {\r\n      timeLeft = `${props.timeLeft.hours} Hours`;\r\n      return <p className=\"proposal__time\">{timeLeft}</p>;\r\n    }\r\n    if(props.timeLeft.minutes > 0) {\r\n      timeLeft = `${props.timeLeft.minutes} Minutes`;\r\n      return <p className=\"proposal__time\">{timeLeft}</p>;\r\n    }\r\n    if(props.timeLeft.seconds > 0) {\r\n      timeLeft = `${props.timeLeft.seconds} Seconds`;\r\n      return <p className=\"proposal__time\">{timeLeft}</p>;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default Time;","import React, {Component} from 'react';\r\n\r\nimport Time from './Time';\r\n\r\nimport '../../layout/components/proposal.sass';\r\nimport upvote from '../../images/upvote.svg'\r\nimport downvote from '../../images/downvote.svg'\r\n\r\nclass Proposal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleVoteFor = this.handleVoteFor.bind(this);\r\n    this.handleVoteAgainst = this.handleVoteAgainst.bind(this);\r\n    this.handleResult = this.handleResult.bind(this);\r\n    this.getResult();\r\n  }\r\n\r\n  handleVoteFor() {\r\n    this.props.protocol.methods.submitVote(this.props.id, true)\r\n      .send({from: this.props.account}, (err, transactionHash) => {\r\n        this.props.setMessage('Transaction Pending...', transactionHash);\r\n      }).on('confirmation', (number, receipt) => {\r\n        if(number === 0) {\r\n          this.props.setMessage('Transaction Confirmed!', receipt.transactionHash);\r\n          setTimeout(() => {\r\n            this.props.clearMessage();\r\n          }, 5000);\r\n          this.props.getProposals();\r\n        }\r\n      }).on('error', (err, receipt) => {\r\n        this.props.setMessage('Transaction Failed.', receipt ? receipt.transactionHash : null);\r\n      });\r\n  }\r\n\r\n  handleVoteAgainst() {\r\n    this.props.protocol.methods.submitVote(this.props.id, false)\r\n      .send({from: this.props.account}, (err, transactionHash) => {\r\n        this.props.setMessage('Transaction Pending...', transactionHash);\r\n      }).on('confirmation', (number, receipt) => {\r\n        if(number === 0) {\r\n          this.props.setMessage('Transaction Confirmed!', receipt.transactionHash);\r\n          setTimeout(() => {\r\n            this.props.clearMessage();\r\n          }, 5000);\r\n          this.props.getProposals();\r\n        }\r\n      }).on('error', (err, receipt) => {\r\n        this.props.setMessage('Transaction Failed.', receipt ? receipt.transactionHash : null);\r\n      });\r\n  }\r\n\r\n  handleResult() {\r\n    this.props.protocol.methods.result(this.props.id)\r\n      .send({from: this.props.account}, (err, transactionHash) => {\r\n        this.props.setMessage('Transaction Pending...', transactionHash);\r\n      }).on('confirmation', (number, receipt) => {\r\n        if(number === 0) {\r\n          this.props.setMessage('Transaction Confirmed!', receipt.transactionHash);\r\n          setTimeout(() => {\r\n            this.props.clearMessage();\r\n          }, 5000);\r\n          this.props.getProposals();\r\n        }\r\n      }).on('error', (err, receipt) => {\r\n        this.props.setMessage('Transaction Failed.', receipt ? receipt.transactionHash : null);\r\n      });\r\n  }\r\n\r\n  getResult() {\r\n    if(this.props.resulted) {\r\n      console.log('Resulted');\r\n      console.log('Result: ', this.props.result);\r\n      this.props.result === true ? this.result = 'Passed' : this.result = 'Failed';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"proposal\">\r\n        <div className=\"proposal__buttons\">\r\n          <img \r\n            src={upvote} \r\n            alt=\"upvote\"\r\n            className={'proposal__button proposal__button--for proposal__button--' + this.props.id}\r\n            onClick={this.handleVoteFor} \r\n          />\r\n          <img \r\n            src={downvote} \r\n            alt=\"downvote\"\r\n            className={'proposal__button proposal__button--against proposal__button--' + this.props.id}\r\n            onClick={this.handleVoteAgainst} \r\n          />\r\n        </div>\r\n        <div className=\"proposal__info\">\r\n          <p className=\"proposal__name\">{this.props.web3.utils.hexToAscii(this.props.title)}</p>\r\n          <p className=\"proposal__description\">{this.props.web3.utils.hexToAscii(this.props.description)}</p>\r\n        </div>\r\n        <p \r\n          onClick={this.handleResult}\r\n          className={'hidden proposal__result proposal__result--' + this.props.id}\r\n        >\r\n          Show Results\r\n        </p>\r\n        <Time timeLeft={this.props.timeLeft} />\r\n        <p className=\"proposal__results\">\r\n          {this.result}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Proposal;","import React from 'react';\r\n\r\nimport '../layout/components/spinner.sass';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"spinner\"></div>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport GovernanceFactory from \"../contracts/GovernanceFactory.json\";\r\nimport Governance from \"../contracts/Governance.json\";\r\nimport getWeb3 from \"../utils/getWeb3\";\r\n\r\nimport Nav from '../components/Nav';\r\nimport Message from '../components/Message';\r\nimport ProposalForm from '../components/Gov/ProposalForm';\r\nimport Proposal from '../components/Gov/Proposal';\r\nimport Footer from '../components/Footer';\r\nimport Spinner from '../components/Spinner';\r\n\r\nimport '../layout/config/_base.sass';\r\nimport '../layout/components/gov.sass';\r\n\r\nclass Gov extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      govId: null,\r\n      web3: null,\r\n      account: null,\r\n      factory: null,\r\n      message: null,\r\n      protocolAddress: null,\r\n      protocol: null,\r\n      token: null,\r\n      openCheck: true,\r\n      closedCheck: false,\r\n      timeLimit: null,\r\n      proposals: [],\r\n      error: false,\r\n      txHash: '',\r\n      noProposals: '',\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = GovernanceFactory.networks[networkId];\r\n      const factory = new web3.eth.Contract(\r\n        GovernanceFactory.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      const id = this.props.match.params.govId;\r\n\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      this.setState({ web3, accounts, factory: factory, govId: id }, this.runExample)\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n\r\n    this.accountInterval = setInterval(async () => {\r\n      const accounts = await this.state.web3.eth.getAccounts();\r\n      if (accounts[0] !== this.state.account) {\r\n        this.setState({\r\n          account: accounts[0]\r\n        });\r\n      }\r\n    }, 1000);\r\n\r\n    await this.getProtocolAddress();\r\n    await this.getTimeLimit();\r\n    await this.getProposals();\r\n    this.toggleButtons();\r\n    this.getTokenName();\r\n    this.noProposals();\r\n  };\r\n \r\n  componentWillUnmount() {\r\n    clearInterval(this.accountInterval);\r\n  }\r\n\r\n  getProtocolAddress = async () => {\r\n     await this.state.factory.methods.getProtocol(\r\n      this.state.govId\r\n    ).call().then((res) => {\r\n      this.setState({protocolAddress: res});\r\n    });\r\n\r\n    const protocol = new this.state.web3.eth.Contract(\r\n      Governance.abi, this.state.protocolAddress\r\n    );\r\n    this.setState({protocol});\r\n\r\n    if(this.state.protocolAddress.toString() === '0x0000000000000000000000000000000000000000') {\r\n      this.setState({error: true});\r\n    }\r\n  }\r\n\r\n  getTokenName = async () => {\r\n    const tokenAddress = await this.state.protocol.methods.token().call();\r\n\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    // API must be switched to mainnet in production\r\n    xhr.open('GET', `https://api-ropsten.etherscan.io/api?module=account&action=tokentx&contractaddress=${tokenAddress}&page=1&offset=1`, true);\r\n    xhr.send();\r\n\r\n    xhr.onreadystatechange = (e) => {\r\n      if(xhr.readyState === 4 && xhr.status === 200) {\r\n        const response = JSON.parse(xhr.responseText);\r\n        const tokenName = response.result[0].tokenName;\r\n        this.setState({token: tokenName});\r\n      }\r\n    }\r\n  }\r\n\r\n  setMessage = (newMessage, txHash) => {\r\n    this.setState({\r\n      message: newMessage,\r\n      txHash\r\n    });\r\n    console.log(this.state.message);\r\n    console.log(this.state.txHash);\r\n  }\r\n\r\n  clearMessage = () => {\r\n    this.setState({\r\n      message: null,\r\n      txHash: null\r\n    });\r\n  }\r\n\r\n  getProposals = async () => {\r\n    await this.getProtocolAddress();\r\n    const proposalsLength = await this.state.protocol.methods.getProposalsLength().call();\r\n    if(proposalsLength > 0) {\r\n      let proposalArr = [];\r\n      for(let i = 0; i < proposalsLength; i++) {\r\n        const proposal = await this.state.protocol.methods.proposals(i).call();\r\n        const proposalObj = {\r\n          id: proposal.id, \r\n          title: proposal.title,\r\n          description: proposal.description,\r\n          startTime: proposal.startTime,\r\n          voteWeightFor: proposal.voteWeightFor,\r\n          voteWeightAgainst: proposal.voteWeightAgainst,\r\n          result: proposal.result,\r\n          resulted: proposal.resulted\r\n        };\r\n        console.log(proposalObj);\r\n        if((parseInt(proposalObj.startTime) + parseInt(this.state.timeLimit)) <= Math.floor(Date.now() / 1000)) {\r\n          proposalObj.ended = true;\r\n          proposalObj.timeLeft = 0;\r\n        } else {\r\n          proposalObj.ended = false;\r\n          // Get time here\r\n          const time = (parseInt(proposalObj.startTime) + parseInt(this.state.timeLimit) - Math.floor(Date.now() / 1000));\r\n          proposalObj.timeLeft = this.formatTime(time);\r\n        }\r\n        proposalArr.push(proposalObj);\r\n      }\r\n      this.setState({proposals: proposalArr});\r\n      this.setState({loading: false});\r\n    } else {\r\n      this.setState({loading: false});\r\n    }\r\n  }\r\n\r\n  formatTime(time) {\r\n    const date = new Date(time * 1000);\r\n    const days = date.getUTCDate() - 1;\r\n    const hours = date.getUTCHours();\r\n    const minutes = date.getUTCMinutes();\r\n    const seconds = date.getSeconds();\r\n    return {\r\n      days, \r\n      hours,\r\n      minutes,\r\n      seconds\r\n    }\r\n  }\r\n\r\n  toggleButtons = () => {\r\n    this.state.proposals.forEach(proposal => {\r\n      if(proposal.ended) {\r\n        const proposalButtons = Array.from(document.querySelectorAll(`.proposal__button--${proposal.id}`));\r\n        proposalButtons.forEach((button) => {\r\n          button.classList.add('gone');\r\n        });\r\n\r\n        if(proposal.resulted === false) {\r\n          const resultButton = document.querySelector(`.proposal__result--${proposal.id}`);\r\n          if(resultButton) {\r\n            resultButton.classList.remove('hidden');\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getTimeLimit = async () => {\r\n    const timeLimit = await this.state.protocol.methods.timeLimit().call();\r\n    this.setState({timeLimit});\r\n  }\r\n\r\n  handleOpenCheck = async () => {\r\n    if(this.state.openCheck === true) {\r\n      await this.setState({openCheck: false});\r\n    }\r\n    else {\r\n      await this.setState({openCheck: true});\r\n    }\r\n\r\n    this.toggleButtons();\r\n  }\r\n\r\n  handleClosedCheck = async () => {\r\n    if(this.state.closedCheck === true) {\r\n      await this.setState({closedCheck: false});\r\n    }\r\n    else {\r\n      await this.setState({closedCheck: true});\r\n    }\r\n\r\n    this.toggleButtons();\r\n  }\r\n\r\n  toggleProposalForm = () => {\r\n    const form = document.querySelector('.proposal-form');\r\n    if(form.classList.contains('hidden')) {\r\n      form.classList.remove('hidden');\r\n    } else {\r\n      form.classList.add('hidden');\r\n    }\r\n  }\r\n\r\n  noProposals = () => {\r\n    if(this.state.proposals.length === 0) {\r\n      this.setState({noProposals: 'Nothing here yet... Be the first to submit a proposal!'});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let proposals = [];\r\n    let spinner;\r\n\r\n    if(this.state.loading === true) {\r\n      spinner = <Spinner />;\r\n    } else {\r\n      spinner = null;\r\n    }\r\n\r\n    this.state.proposals.forEach(proposal => {\r\n      if(this.state.openCheck === true) {\r\n        if(proposal.resulted === false) {\r\n          proposals.push(\r\n            <Proposal \r\n              {...this.state}\r\n              id={proposal.id} \r\n              title={proposal.title}\r\n              description={proposal.description} \r\n              key={proposal.id}\r\n              voteWeightFor={proposal.voteWeightFor} \r\n              voteWeightAgainst={proposal.voteWeightAgainst}\r\n              timeLeft={proposal.timeLeft}\r\n              ended={proposal.ended}\r\n              setMessage={this.setMessage}\r\n              clearMessage={this.clearMessage}\r\n            />\r\n          );\r\n        }\r\n      }\r\n      if(this.state.closedCheck === true) {\r\n        if(proposal.resulted === true) {\r\n          proposals.push(\r\n            <Proposal \r\n              {...this.state}\r\n              id={proposal.id} \r\n              title={proposal.title}\r\n              description={proposal.description} \r\n              key={proposal.id}\r\n              voteWeightFor={proposal.voteWeightFor} \r\n              voteWeightAgainst={proposal.voteWeightAgainst}\r\n              timeLeft={proposal.timeLeft}\r\n              ended={proposal.ended}\r\n              resulted={proposal.resulted}\r\n              result={proposal.result}\r\n              setMessage={this.setMessage}\r\n              clearMessage={this.clearMessage}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    if(this.state.error) {\r\n      return (\r\n        <div className=\"gov\">\r\n          <Nav {...this.state} tokenName={this.state.token} />\r\n          <p className=\"gov__error\">Protocol does not exist.</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Nav {...this.state} tokenName={this.state.token} />\r\n          <div className=\"gov\">\r\n            <h2 className=\"gov__header\">\r\n              Proposals\r\n            </h2>\r\n            <div className=\"gov__utils\">\r\n              <button \r\n                className=\"gov__proposal-button\"\r\n                onClick={this.toggleProposalForm}\r\n              >\r\n                Submit a Proposal\r\n              </button>\r\n              <div className=\"gov__checkboxes\">\r\n                <label className=\"gov__label\">\r\n                  Open\r\n                  <input \r\n                    type=\"checkbox\"\r\n                    className=\"gov__checkbox\"\r\n                    name=\"open\"\r\n                    onChange={this.handleOpenCheck}\r\n                    checked={this.state.openCheck}\r\n                  />\r\n                  <span className=\"gov__checkmark\"></span>\r\n                </label>\r\n                <label className=\"gov__label\">\r\n                  Closed\r\n                  <input \r\n                    type=\"checkbox\"\r\n                    className=\"gov__checkbox\"\r\n                    name=\"closed\"\r\n                    onChange={this.handleClosedCheck}\r\n                    checked={this.state.closedCheck}\r\n                  />\r\n                  <span className=\"gov__checkmark\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <ProposalForm \r\n              {...this.state}\r\n              getProposals={this.getProposals}\r\n              setMessage={this.setMessage}\r\n              clearMessage={this.clearMessage}\r\n              toggleProposalForm={this.toggleProposalForm}\r\n              noProposals={this.noProposals}\r\n            />\r\n            {this.state.noProposals}\r\n            <div className=\"gov__proposals\">\r\n              {spinner}\r\n              {proposals.reverse()}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n          <Message />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gov;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport Index from './pages/Index';\r\nimport Gov from './pages/Gov';\r\n\r\nimport './layout/config/_base.sass';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router basename=\"/g0vx\">\r\n          <Route exact path=\"/\" component={Index} />\r\n          <Route path=\"/gov/:govId\" component={Gov} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}